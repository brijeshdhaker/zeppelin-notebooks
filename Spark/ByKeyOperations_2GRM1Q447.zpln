{
  "paragraphs": [
    {
      "text": "%spark.conf\n\nSPARK_HOME /opt/spark-3.1.2\nmaster local\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-19 05:58:47.942",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "fontSize": 12.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642062869510_282349625",
      "id": "paragraph_1642062869510_282349625",
      "dateCreated": "2022-01-13 08:34:29.510",
      "dateStarted": "2022-06-19 05:58:48.003",
      "dateFinished": "2022-06-19 05:58:48.048",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n\n\nval linesRDD \u003d sc.parallelize(\n  List(\"Germany India USA\",\"USA India Russia\",\"India Brazil Canada China\")\n) \n\n//linesRDD.foreach(println)\n\nfor (response \u003c- linesRDD.collect()) println(response)\n\nprintln\nprintln\nprintln\nprintln\n\nlinesRDD.take(3).foreach(println)\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-22 02:02:49.534",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Germany India USA\nUSA India Russia\nIndia Brazil Canada China\n\n\n\n\nGermany India USA\nUSA India Russia\nIndia Brazil Canada China\n\u001b[1m\u001b[34mlinesRDD\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[String]\u001b[0m \u003d ParallelCollectionRDD[12] at parallelize at \u003cconsole\u003e:28\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d2"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d3"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d4"
            },
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d5"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642061616834_1676521321",
      "id": "paragraph_1642061616834_1676521321",
      "dateCreated": "2022-01-13 08:13:36.834",
      "dateStarted": "2022-06-22 02:02:49.573",
      "dateFinished": "2022-06-22 02:02:53.073",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n\nval wordRDD \u003d linesRDD.flatMap(_.split(\" \"));\n//\nwordRDD.foreach(println)\n//\n// wordRDD.collect().foreach(println)\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-06-19 06:04:25.559",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mwordRDD\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[String]\u001b[0m \u003d MapPartitionsRDD[4] at flatMap at \u003cconsole\u003e:29\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://nodemanager:42647/jobs/job?id\u003d7"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642061766413_1835503491",
      "id": "paragraph_1642061766413_1835503491",
      "dateCreated": "2022-01-13 08:16:06.413",
      "dateStarted": "2022-06-19 06:04:25.581",
      "dateFinished": "2022-06-19 06:04:25.871",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n\nval pairedWordRDD \u003d wordRDD.map(x \u003d\u003e (x, 1))\npairedWordRDD.take(3).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2022-06-16 02:09:00.897",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(Germany,1)\n(India,1)\n(USA,1)\n\u001b[1m\u001b[34mpairedWordRDD\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, Int)]\u001b[0m \u003d MapPartitionsRDD[2] at map at \u003cconsole\u003e:27\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d3"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642064227753_1830165128",
      "id": "paragraph_1642064227753_1830165128",
      "dateCreated": "2022-01-13 08:57:07.753",
      "dateStarted": "2022-06-16 02:09:00.916",
      "dateFinished": "2022-06-16 02:09:01.369",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n\nprintln(\"Distinct \u003d\u003d\u003e\")\nval distinctRDD \u003d pairedWordRDD.distinct()\ndistinctRDD.take(3).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2022-06-16 02:09:14.410",
      "progress": 50,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Distinct \u003d\u003d\u003e\n(Germany,1)\n(India,1)\n(Brazil,1)\n\u001b[1m\u001b[34mdistinctRDD\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, Int)]\u001b[0m \u003d MapPartitionsRDD[5] at distinct at \u003cconsole\u003e:28\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4040/jobs/job?id\u003d4"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642062060602_1630820985",
      "id": "paragraph_1642062060602_1630820985",
      "dateCreated": "2022-01-13 08:21:00.602",
      "dateStarted": "2022-06-16 02:09:14.428",
      "dateFinished": "2022-06-16 02:09:15.526",
      "status": "FINISHED"
    },
    {
      "title": "SortByKey",
      "text": "%spark\n\n \nprintln(\"Sort by Key \u003d\u003d\u003e\")\nval sortRDD \u003d pairedWordRDD.sortByKey()\nsortRDD.take(3).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2022-01-15 15:11:15.193",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Sort by Key \u003d\u003d\u003e\n(Brazil,1)\n(Canada,1)\n(China,1)\n\u001b[1m\u001b[34msortRDD\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, Int)]\u001b[0m \u003d ShuffledRDD[112] at sortByKey at \u003cconsole\u003e:29\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d47"
            },
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d48"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642064342739_1401623065",
      "id": "paragraph_1642064342739_1401623065",
      "dateCreated": "2022-01-13 08:59:02.739",
      "dateStarted": "2022-01-15 15:11:15.197",
      "dateFinished": "2022-01-15 15:11:15.634",
      "status": "FINISHED"
    },
    {
      "title": "reduceByKey",
      "text": "%spark\n\n//reduceByKey\nprintln(\"Reduce by Key \u003d\u003d\u003e\")\nval wordCount \u003d pairedWordRDD.reduceByKey((a,b)\u003d\u003ea+b)\nwordCount.take(6).foreach(println)",
      "user": "anonymous",
      "dateUpdated": "2022-01-24 03:41:09.979",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Reduce by Key \u003d\u003d\u003e\n(Brazil,1)\n(Canada,1)\n(China,1)\n(USA,2)\n(Germany,1)\n(Russia,1)\n\u001b[1m\u001b[34mwordCount\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, Int)]\u001b[0m \u003d ShuffledRDD[113] at reduceByKey at \u003cconsole\u003e:29\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d49"
            },
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d50"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642064509536_1828362782",
      "id": "paragraph_1642064509536_1828362782",
      "dateCreated": "2022-01-13 09:01:49.537",
      "dateStarted": "2022-01-15 15:11:26.603",
      "dateFinished": "2022-01-15 15:11:27.328",
      "status": "FINISHED"
    },
    {
      "title": "aggregateByKey",
      "text": "%spark\n\n/*\n\nAggregateByKey(arg1,arg2):\n\nThis will take the two functions:\n1st Argument : specify what to do with value of the key if the same key appears inside same partition\n2nd Argument : specify what to do with the values of same key across all other partitions\n\n*/\n\ndef seqFunction \u003d (accu:Int, v:Int) \u003d\u003e accu + v\n\ndef combFunction \u003d (accu1:Int, accu2:Int) \u003d\u003e accu1 + accu2\n\nprintln(\"Aggregate by Key \u003d\u003d\u003e wordcount\")\nval wordCount2 \u003d pairedWordRDD.aggregateByKey(0)(seqFunction, combFunction)\n\nwordCount2.take(3).foreach(println)\n    \n\n//keys\nprintln(\"Keys \u003d\u003d\u003e\")\nwordCount2.keys.foreach(println)\n\n//values\nprintln(\"values \u003d\u003d\u003e\")\nwordCount2.values.foreach(println)\n\nprintln(\"Count :\"+wordCount2.count())\n    ",
      "user": "anonymous",
      "dateUpdated": "2022-01-24 03:41:05.090",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Aggregate by Key \u003d\u003d\u003e wordcount\n(Brazil,1)\n(Canada,1)\n(China,1)\nKeys \u003d\u003d\u003e\nvalues \u003d\u003d\u003e\nCount :7\n\u001b[1m\u001b[34mseqFunction\u001b[0m: \u001b[1m\u001b[32m(Int, Int) \u003d\u003e Int\u001b[0m\n\u001b[1m\u001b[34mcombFunction\u001b[0m: \u001b[1m\u001b[32m(Int, Int) \u003d\u003e Int\u001b[0m\n\u001b[1m\u001b[34mwordCount2\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.rdd.RDD[(String, Int)]\u001b[0m \u003d ShuffledRDD[114] at aggregateByKey at \u003cconsole\u003e:42\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d51"
            },
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d52"
            },
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d53"
            },
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d54"
            },
            {
              "jobUrl": "http://nodemanager:46205/jobs/job?id\u003d55"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642064654166_2014856083",
      "id": "paragraph_1642064654166_2014856083",
      "dateCreated": "2022-01-13 09:04:14.166",
      "dateStarted": "2022-01-15 15:11:38.288",
      "dateFinished": "2022-01-15 15:11:38.825",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n/*\n\ncombineByKey(arg1, arg2, arg3) :\n\nIt will take three functions and here is the usage of these functions,\n1st Argument : specify the what to do with value of the key when the first time key appears in partition.\n2nd Argument : specify what to do with value of the key if the same key appears inside same partition\n3rd Argument : specify what to do with the values of key across  other partitions\n\n*/\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-01-24 03:40:59.338",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 12.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1642064853540_1431845509",
      "id": "paragraph_1642064853540_1431845509",
      "dateCreated": "2022-01-13 09:07:33.540",
      "status": "READY"
    }
  ],
  "name": "ByKeyOperations",
  "id": "2GRM1Q447",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}